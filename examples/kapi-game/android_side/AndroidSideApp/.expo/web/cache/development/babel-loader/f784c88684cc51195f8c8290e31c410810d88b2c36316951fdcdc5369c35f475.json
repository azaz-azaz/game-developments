{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState({\n      x: 0,\n      y: 0\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    touchPoint = _useState4[0],\n    setTouchPoint = _useState4[1];\n  var onPress = function onPress(event) {\n    var screenWidth = Dimensions.get('window').width;\n    var screenHeight = Dimensions.get('window').height;\n    setTouchPoint({\n      x: event.nativeEvent.locationX,\n      y: event.nativeEvent.locationY\n    });\n    setModalVisible(true);\n  };\n  var onModalClose = function onModalClose() {\n    setModalVisible(false);\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: onPress,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [touchPoint.x !== 0 && touchPoint.y !== 0 && _jsx(View, {\n        style: [styles.circle, {\n          left: touchPoint.x - 25,\n          top: touchPoint.y - 25\n        }]\n      }), _jsx(Modal, {\n        visible: isModalVisible,\n        transparent: true,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Circle has been drawn!\"\n          }), _jsx(TouchableWithoutFeedback, {\n            onPress: onModalClose,\n            children: _jsx(Text, {\n              style: styles.modalButton,\n              children: \"Close\"\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  circle: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: 'blue',\n    position: 'absolute'\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 22,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderColor: 'rgba(0, 0, 0, 0.1)'\n  },\n  modalText: {\n    marginBottom: 15\n  },\n  modalButton: {\n    fontSize: 18,\n    color: 'blue'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","StyleSheet","View","TouchableWithoutFeedback","Modal","Text","Dimensions","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","_useState3","x","y","_useState4","touchPoint","setTouchPoint","onPress","event","screenWidth","get","width","screenHeight","height","nativeEvent","locationX","locationY","onModalClose","children","style","styles","container","circle","left","top","visible","transparent","modalContent","modalText","modalButton","create","flex","justifyContent","alignItems","backgroundColor","borderRadius","position","padding","borderColor","marginBottom","fontSize","color"],"sources":["C:/my_works/pythonProjects/game-dev-with-git/examples/kapi-game/android_side/AndroidSideApp/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, TouchableWithoutFeedback, Modal, Text, Dimensions } from 'react-native';\n\nconst App = () => {\n const [isModalVisible, setModalVisible] = useState(false);\n const [touchPoint, setTouchPoint] = useState({ x: 0, y: 0 });\n\n const onPress = (event) => {\n    const screenWidth = Dimensions.get('window').width;\n    const screenHeight = Dimensions.get('window').height;\n\n    setTouchPoint({ x: event.nativeEvent.locationX, y: event.nativeEvent.locationY });\n    setModalVisible(true);\n };\n\n const onModalClose = () => {\n    setModalVisible(false);\n };\n\n return (\n    <TouchableWithoutFeedback onPress={onPress}>\n      <View style={styles.container}>\n        {touchPoint.x !== 0 && touchPoint.y !== 0 && (\n          <View\n            style={[\n              styles.circle,\n              {\n                left: touchPoint.x - 25,\n                top: touchPoint.y - 25,\n              },\n            ]}\n          />\n        )}\n        <Modal visible={isModalVisible} transparent={true}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalText}>Circle has been drawn!</Text>\n            <TouchableWithoutFeedback onPress={onModalClose}>\n              <Text style={styles.modalButton}>Close</Text>\n            </TouchableWithoutFeedback>\n          </View>\n        </Modal>\n      </View>\n    </TouchableWithoutFeedback>\n );\n};\n\nconst styles = StyleSheet.create({\n container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n },\n circle: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: 'blue',\n    position: 'absolute',\n },\n modalContent: {\n    backgroundColor: 'white',\n    padding: 22,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    borderColor: 'rgba(0, 0, 0, 0.1)',\n },\n modalText: {\n    marginBottom: 15,\n },\n modalButton: {\n    fontSize: 18,\n    color: 'blue',\n },\n});\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}