{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Svg, { Circle } from 'react-native-svg';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    circles = _useState2[0],\n    setCircles = _useState2[1];\n  var handleResponderRelease = function handleResponderRelease(event) {\n    var _event$nativeEvent = event.nativeEvent,\n      locationX = _event$nativeEvent.locationX,\n      locationY = _event$nativeEvent.locationY;\n    setCircles([].concat(_toConsumableArray(circles), [{\n      x: locationX,\n      y: locationY\n    }]));\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(TouchableOpacity, {\n      style: styles.touchable,\n      children: _jsx(Svg, {\n        height: \"100%\",\n        width: \"100%\",\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderRelease: handleResponderRelease,\n        children: circles.map(function (circle, index) {\n          return _jsx(Circle, {\n            cx: circle.x,\n            cy: circle.y,\n            r: \"20\",\n            fill: \"blue\"\n          }, index);\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  touchable: {\n    width: '100%',\n    height: '100%'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","TouchableOpacity","Svg","Circle","jsx","_jsx","App","_useState","_useState2","_slicedToArray","circles","setCircles","handleResponderRelease","event","_event$nativeEvent","nativeEvent","locationX","locationY","concat","_toConsumableArray","x","y","style","styles","container","children","touchable","height","width","onStartShouldSetResponder","onResponderRelease","map","circle","index","cx","cy","r","fill","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/my_works/pythonProjects/game-dev-with-git/examples/kapi-game/android_side/AndroidSideApp/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport Svg, { Circle } from 'react-native-svg';\n\nexport default function App() {\n const [circles, setCircles] = useState([]);\n\n const handleResponderRelease = (event) => {\n    const { locationX, locationY } = event.nativeEvent;\n    setCircles([...circles, { x: locationX, y: locationY }]);\n };\n\n return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.touchable}>\n        <Svg\n          height=\"100%\"\n          width=\"100%\"\n          onStartShouldSetResponder={() => true}\n          onResponderRelease={handleResponderRelease}\n        >\n          {circles.map((circle, index) => (\n            <Circle\n              key={index}\n              cx={circle.x}\n              cy={circle.y}\n              r=\"20\"\n              fill=\"blue\"\n            />\n          ))}\n        </Svg>\n      </TouchableOpacity>\n    </View>\n );\n}\n\nconst styles = StyleSheet.create({\n container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n },\n touchable: {\n    width: '100%',\n    height: '100%',\n },\n});"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,OAAOC,GAAG,IAAIC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE/C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC7B,IAAAC,SAAA,GAA8BT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAK,EAAK;IACvC,IAAAC,kBAAA,GAAiCD,KAAK,CAACE,WAAW;MAA1CC,SAAS,GAAAF,kBAAA,CAATE,SAAS;MAAEC,SAAS,GAAAH,kBAAA,CAATG,SAAS;IAC5BN,UAAU,IAAAO,MAAA,CAAAC,kBAAA,CAAKT,OAAO,IAAE;MAAEU,CAAC,EAAEJ,SAAS;MAAEK,CAAC,EAAEJ;IAAU,CAAC,EAAC,CAAC;EAC3D,CAAC;EAED,OACGZ,IAAA,CAACL,IAAI;IAACsB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BpB,IAAA,CAACJ,gBAAgB;MAACqB,KAAK,EAAEC,MAAM,CAACG,SAAU;MAAAD,QAAA,EACxCpB,IAAA,CAACH,GAAG;QACFyB,MAAM,EAAC,MAAM;QACbC,KAAK,EAAC,MAAM;QACZC,yBAAyB,EAAE,SAAAA,0BAAA;UAAA,OAAM,IAAI;QAAA,CAAC;QACtCC,kBAAkB,EAAElB,sBAAuB;QAAAa,QAAA,EAE1Cf,OAAO,CAACqB,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;UAAA,OACzB5B,IAAA,CAACF,MAAM;YAEL+B,EAAE,EAAEF,MAAM,CAACZ,CAAE;YACbe,EAAE,EAAEH,MAAM,CAACX,CAAE;YACbe,CAAC,EAAC,IAAI;YACNC,IAAI,EAAC;UAAM,GAJNJ,KAKN,CAAC;QAAA,CACH;MAAC,CACC;IAAC,CACU;EAAC,CACf,CAAC;AAEX;AAEA,IAAMV,MAAM,GAAGxB,UAAU,CAACuC,MAAM,CAAC;EAChCd,SAAS,EAAE;IACRe,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACnB,CAAC;EACDhB,SAAS,EAAE;IACRE,KAAK,EAAE,MAAM;IACbD,MAAM,EAAE;EACX;AACD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}